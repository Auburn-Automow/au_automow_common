#!/usr/bin/env python
# encoding: utf-8

"""
driver.py - Provides an interface for communicating with the trimemr arm board.

Created by William Woodall on 2010-05-28.
"""
__author__ = "William Woodall"

###  Imports  ###

# ROS imports
import roslib; roslib.load_manifest('trimmer_arm')
import rospy

# ROS msg and srv imports


# Python Libraries
import sys

# Peer Libraries
from trimmer_arm.interface import TrimmerArmBoard
from logerror import logError

###  Variables  ###
tab = None

###  Functions  ###

def main():
    global hkb, housekeeping_publisher
    # ROS init
    rospy.init_node("trimmer_arm_driver")
    # Get the command line arguments
    cmd_line_args = rospy.myargv(argv=sys.argv)
    # If the serial port command was passed use it otherwise pass nothing
    if len(cmd_line_args) > 1:
        tab = TrimmerArmBoard(cmd_line_args[1])
    else:
        tab = TrimmerArmBoard()
    # Setup Proteus Logging
    tab.info = rospy.loginfo
    tab.logerr = rospy.logerr
    # Handle Service Requests until shutdown
    while not rospy.is_shutdown():
        tab.logSerialData()
    # Tell Proteus to stop cleanly
    tab.shutdown()

###  If Main  ###
if __name__ == '__main__':
    try:
        main()
    except:
        logError(sys.exc_info(), rospy.logerr, "Unhandled Exception in the Housekeeping Driver:")
