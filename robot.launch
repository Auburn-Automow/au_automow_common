<launch>
    <master auto="start" />
    
    <!-- Start the State publisher responsible for publishing tf's for the mower -->
    <include file="$(find automow-urdf)/launch/state_publisher.launch" />
    
    <!-- Start the motor controller and teleoperation nodes -->
    <include file="$(find ax2550)/launch/locomotion_control.launch" />
    
    <!-- Start the IMU for orientation odometry -->
        <node name="imu_data" pkg="atomic_imu" type="imu_data" output="screen" />
	<node name="dg14_gps_driver" pkg="dg14" type="driver" output="screen" />
	<node name="dg14_gps2odom" pkg="dg14" type="gps2odom" output="screen" />
	<node name="hokuyo_node" pkg="hokuyo_node" type="hokuyo_node">
		<param name="intensity" type="bool" value="False" />
		<param name="port" type="str" value="/dev/ttyACM0" />
		<param name="calibrate_time" type="bool" value="True" />
		<param name="frame_id" type="str" value="/base_laser" />
		<param name="time_offset" type="double" value="0.0" />
		<param name="allow_unsafe_settings" type="bool" value="False" />
	</node>

        <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen">
                <param name="freq" value="30.0"/>
                <param name="sensor_timeout" value="1.2"/>
                <param name="publish_tf" value="true"/>
                <param name="odom_used" value="true"/>
                <param name="imu_used" value="true"/>
                <param name="vo_used" value="true"/>
		<remap from="odom" to="base_odom"/>
		<remap from="vo" to="gps_odom" />
        </node>

    <!-- <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="log">  -->
        <!-- params go here, if we need to confiugre the usb cam -->
    <!-- </node>
    <node name="line_processing" pkg="line_processing" type="line_processing" output="screen">
        <param name="birds_eye" value="/home/william/automow/automow/au_automow_vision/line_processing/birdeye_convert_mat.xml" /> -->
        <!-- params go here, we need to make some of the settings of the algorithm dynamic -->
    <!-- </node> -->
</launch>
